{"version":3,"file":"effects.js","sources":["../src/effects.ts"],"sourcesContent":["import { SceneItem, AnimatorState, Frame } from \"scenejs\";\nimport { IObject, isArray, splitUnit } from \"@daybrush/utils\";\nimport { EffectState } from \"./types\";\n\n/**\n * @namespace effects\n */\n\n/**\n * Use the property to create an effect.\n * @memberof effects\n * @private\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"@scenejs/effects\";\n// Scene.set(\"opacity\", [0, 1, 0], {duration: 2});\nset(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\n// Scene.blink({duration: 2});\nblink({ duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nfunction set(property: string | string[], values: any[], options: Partial<AnimatorState>): SceneItem {\n    const item = new SceneItem({}, options);\n    const length = values.length;\n\n    for (let i = 0; i < length; ++i) {\n        item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n    }\n    return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomIn } from \"@scenejs/effects\";\n\n// Scene.zoomIn({duration: 2});\nzoomIn({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomOut } from \"@scenejs/effects\";\n// Scene.zoomOut({ duration: 2 });\nzoomOut({ duration: 2 });\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeIn } from \"@scenejs/effects\";\n\n// Scene.wipeIn({ property: \"left\", duration: 2 });\nwipeIn({ property: \"left\", duration: 2 });\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeOut } from \"@scenejs/effects\";\n// Scene.wipeOut({property: \"left\", duration: 2});\nwipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Switch the scene from `item1` to `item2`.\n * @memberof effects\n * @param - Item that end effect\n * @param - Item that start effect\n * @param -  `transitionItem` or `transitionObject` to switch from `item1` to `item2`\n * @example\nimport Scene from \"scenejs\";\nimport {transition, zoomIn, fadeOut} from \"@scenejs/effects\";\n\nvar transitionScene = new Scene({\n  \"[data-transition] .target\": {},\n  \"[data-transition] .target2\": {},\n}, {\n  delay: 0.1,\n  easing: \"ease-in-out\",\n  selector: true,\n});\nScene.transition(\n  transitionScene.getItem(\"[data-transition] .target\"),\n  transitionScene.getItem(\"[data-transition] .target2\"),\n  {\n    0:  [\n      fadeOut({ duration: 1 }),\n      zoomIn({ from: 1, to: 2, duration: 1 }),\n      \"opacity: 1; transform: rotate(0deg)\",\n    ],\n    1: \"opacity: 0; transform: rotate(40deg)\",\n  }\n);\ntransitionScene.play();\n */\nexport function transition(\n    item1: SceneItem,\n    item2: SceneItem,\n    transitionObject: SceneItem | IObject<any>,\n): void {\n    const transitionItem = new SceneItem();\n\n    transitionItem.append(transitionObject);\n\n    const duration = transitionItem.getDuration();\n    const transitionTime = Math.max(item1.getDuration() - duration, 0);\n    item1.set({\n        [transitionTime]: transitionItem,\n    });\n    transitionItem.setDirection(\"reverse\");\n    item2.set({\n        0: transitionItem,\n    });\n}\n\n/**\n * Make a fade in effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeIn } from \"@scenejs/effects\";\n// Scene.fadeIn({duration: 2});\nfadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeOut } from \"@scenejs/effects\";\n// Scene.fadeOut({duration: 2});\nfadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport {blink} from \"@scenejs/effects\";\n// Scene.blink({duration: 2});\nblink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to, from], arguments[0]);\n}\n/**\n * You can create a flip effect horizontally, vertically, or diagonally.\n * @memberof effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount to be moved by the x-axis.\n * @param {number} [options.y=1] - Indicates the direction and amount to be moved by the y-axis.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 1, backside: false })\nflip()\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target\")\n  .play();\nflip({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target2\")\n  .play();\n */\nexport function flip({\n    x = 1,\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}) {\n    const item = new SceneItem({}, arguments[0]);\n    let property = \"\";\n    let startValue = \"\";\n    let endValue = \"\";\n    const ratio = (x && y) || x ? x : y;\n    const startDeg = (backside ? (ratio > 0 ? 180 : -180) : 0);\n    const endDeg = startDeg + ratio * 180;\n\n    if (x && y) {\n        const axis = [x > 0 ? 1 : -1, y > 0 ? 1 : -1, 0, \"\"].join(\",\");\n\n        property = \"rotate3d\";\n        startValue = axis + startDeg + \"deg\";\n        endValue = axis + endDeg + \"deg\";\n    } else {\n        if (x) {\n            property = \"rotateX\";\n        } else if (y) {\n            property = \"rotateY\";\n        } else {\n            return item;\n        }\n        startValue = startDeg + \"deg\";\n        endValue = endDeg + \"deg\";\n    }\n    item.set({\n        transform: {\n            [property]: [startValue, endValue],\n        },\n    });\n    return item;\n}\n/**\n * You can create an effect that flips vertically around the x-axis.\n * @memberof effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipX } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 0, backside: false })\n// flipX({ x: 1, backside: false })\nflipX()\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target\")\n  .play();\nflipX({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target2\")\n  .play();\n */\nexport function flipX({\n    x = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ y: 0, x, backside });\n\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * You can create an effect that flips horizontally around the y-axis.\n * @memberof effects\n * @param options\n * @param {number} [options.y=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipY } from \"@scenejs/effects\";\n\n// flip({ x: 0, y: 1, backside: false })\n// flipY({ y: 1, backside: false })\nflipY()\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target\")\n  .play();\nflipY({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target2\")\n  .play();\n */\nexport function flipY({\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ x: 0, y, backside });\n\n    item.setOptions(arguments[0]);\n    return item;\n}\n\n/**\n * Make a shake effect.\n * @memberof effects\n * @param options\n * @param {object|string} [options.properties=\"transform: translateX(5px) translateY (5px) rotate(5deg)\"] - The range of properties to be moved.\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake } from \"@scenejs/effects\";\n\nshake()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n        translateY: [\"-5px\", \"5px\"],\n        rotate: \"5deg\",\n        // set range\n        scale: [0.8, 1],\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target2\")\n  .play();\n */\nexport function shake({\n    properties = {\n        transform: {\n            translateX: [`-10px`, `10px`],\n            translateY: [`-10px`, `10px`],\n            rotate: [`-10deg`, `10deg`],\n        },\n    },\n    frequency = 10,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = new SceneItem({}, arguments[0]);\n    const frame = new Frame(properties);\n    const names = frame.getNames();\n\n    names.forEach((propertyNames, i) => {\n        const value = frame.get(...propertyNames);\n        let start: number = 0;\n        let end: number = 0;\n        let unit: string = \"\";\n\n        if (isArray(value)) {\n            const { value: startNumber, unit: startUnit } = splitUnit(value[0]);\n\n            unit = startUnit;\n            start = startNumber;\n            end = splitUnit(value[1]).value;\n        } else {\n            const { value: valueNumber, unit: valueUnit } = splitUnit(value);\n\n            unit = valueUnit;\n            end = Math.abs(valueNumber);\n            start = -end;\n        }\n        item.set(`0%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n        item.set(`100%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n\n        for (let j = 1; j <= frequency; ++j) {\n            const ratio = Math.random() * (end - start) + start;\n            item.set(`${j / (frequency + 1) * 100}%`, ...propertyNames, `${ratio}${unit}`);\n        }\n    });\n    return item;\n}\n\n/**\n * Make a horizontal shake effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.x=[\"-5px\", \"5px\"]] - range of x's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeX } from \"@scenejs/effects\";\n\n// shakeX({ x: [\"-5px\", \"5px\"], frequency: 10 })\nshakeX()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target2\")\n  .play();\n */\nexport function shakeX({\n    x = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateX: x,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * Make a vertical shake effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.y=[\"-5px\", \"5px\"]] - range of y's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeY } from \"@scenejs/effects\";\n\n// shakeY({ y: [\"-5px\", \"5px\"], frequency: 10 })\nshakeY()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateY: [\"-5px\", \"5px\"]\n        translateY: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target2\")\n  .play();\n */\nexport function shakeY({\n    y = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateY: y,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n"],"names":["set","property","values","options","item","SceneItem","length","i","zoomIn","_a","_b","_c","from","_d","to","arguments","zoomOut","wipeIn","_e","wipeOut","transition","item1","item2","transitionObject","transitionItem","append","duration","getDuration","transitionTime","Math","max","setDirection","fadeIn","fadeOut","blink","flip","x","y","_f","backside","startValue","endValue","ratio","startDeg","endDeg","axis","join","transform","flipX","setOptions","flipY","shake","properties","frequency","frame","Frame","names","getNames","forEach","propertyNames","value","get","start","end","unit","isArray","startNumber","startUnit","splitUnit","valueNumber","valueUnit","abs","j","random","shakeX","translateX","shakeY","translateY"],"mappings":"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"}