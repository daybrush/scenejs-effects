{"version":3,"file":"effects.js","sources":["../node_modules/@daybrush/utils/dist/utils.esm.js","../src/effects.ts"],"sourcesContent":["/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.8.0\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n * Returns the inner product of two numbers(`a1`, `a2`) by two criteria(`b1`, `b2`).\n * @memberof Utils\n * @param - The first number\n * @param - The second number\n * @param - The first number to base on the inner product\n * @param - The second number to base on the inner product\n * @return - Returns the inner product\nimport { dot } from \"@daybrush/utils\";\n\nconsole.log(dot(0, 15, 2, 3)); // 6\nconsole.log(dot(5, 15, 2, 3)); // 9\nconsole.log(dot(5, 15, 1, 1)); // 10\n */\n\nfunction dot(a1, a2, b1, b2) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\n\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\n\nfunction removeEvent(el, type, listener) {\n  el.removeEventListener(type, listener);\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, dot, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, toArray, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS, addEvent, removeEvent };\n//# sourceMappingURL=utils.esm.js.map\n","import { SceneItem, AnimatorState, Frame } from \"scenejs\";\nimport { IObject, isArray, splitUnit } from \"@daybrush/utils\";\nimport { EffectState } from \"./types\";\n\n/**\n * @namespace Effects\n */\n\n/**\n * Use the property to create an effect.\n * @memberof Effects\n * @private\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"@scenejs/effects\";\n// Scene.set(\"opacity\", [0, 1, 0], {duration: 2});\nset(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\n// Scene.blink({duration: 2});\nblink({ duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nfunction set(property: string | string[], values: any[], options: Partial<AnimatorState>): SceneItem {\n    const item = new SceneItem({}, options);\n    const length = values.length;\n\n    for (let i = 0; i < length; ++i) {\n        item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n    }\n    return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomIn } from \"@scenejs/effects\";\n\n// Scene.zoomIn({duration: 2});\nzoomIn({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomOut } from \"@scenejs/effects\";\n// Scene.zoomOut({ duration: 2 });\nzoomOut({ duration: 2 });\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeIn } from \"@scenejs/effects\";\n\n// Scene.wipeIn({ property: \"left\", duration: 2 });\nwipeIn({ property: \"left\", duration: 2 });\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeOut } from \"@scenejs/effects\";\n// Scene.wipeOut({property: \"left\", duration: 2});\nwipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Switch the scene from `item1` to `item2`.\n * @memberof Effects\n * @param - Item that end effect\n * @param - Item that start effect\n * @param -  `transitionItem` or `transitionObject` to switch from `item1` to `item2`\n * @example\nimport Scene from \"scenejs\";\nimport {transition, zoomIn, fadeOut} from \"@scenejs/effects\";\n\nvar transitionScene = new Scene({\n  \"[data-transition] .target\": {},\n  \"[data-transition] .target2\": {},\n}, {\n  delay: 0.1,\n  easing: \"ease-in-out\",\n  selector: true,\n});\nScene.transition(\n  transitionScene.getItem(\"[data-transition] .target\"),\n  transitionScene.getItem(\"[data-transition] .target2\"),\n  {\n    0:  [\n      fadeOut({ duration: 1 }),\n      zoomIn({ from: 1, to: 2, duration: 1 }),\n      \"opacity: 1; transform: rotate(0deg)\",\n    ],\n    1: \"opacity: 0; transform: rotate(40deg)\",\n  }\n);\ntransitionScene.play();\n */\nexport function transition(\n    item1: SceneItem,\n    item2: SceneItem,\n    transitionObject: SceneItem | IObject<any>,\n): void {\n    const transitionItem = new SceneItem();\n\n    transitionItem.append(transitionObject);\n\n    const duration = transitionItem.getDuration();\n    const transitionTime = Math.max(item1.getDuration() - duration, 0);\n    item1.set({\n        [transitionTime]: transitionItem,\n    });\n    transitionItem.setDirection(\"reverse\");\n    item2.set({\n        0: transitionItem,\n    });\n}\n\n/**\n * Make a fade in effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeIn } from \"@scenejs/effects\";\n// Scene.fadeIn({duration: 2});\nfadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeOut } from \"@scenejs/effects\";\n// Scene.fadeOut({duration: 2});\nfadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport {blink} from \"@scenejs/effects\";\n// Scene.blink({duration: 2});\nblink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to, from], arguments[0]);\n}\n/**\n * You can create a flip effect horizontally, vertically, or diagonally.\n * @memberof Effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount to be moved by the x-axis.\n * @param {number} [options.y=1] - Indicates the direction and amount to be moved by the y-axis.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 1, backside: false })\nflip()\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target\")\n  .play();\nflip({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target2\")\n  .play();\n */\nexport function flip({\n    x = 1,\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}) {\n    const item = new SceneItem({}, arguments[0]);\n    let property = \"\";\n    let startValue = \"\";\n    let endValue = \"\";\n    const ratio = (x && y) || x ? x : y;\n    const startDeg = (backside ? (ratio > 0 ? 180 : -180) : 0);\n    const endDeg = startDeg + ratio * 180;\n\n    if (x && y) {\n        const axis = [x > 0 ? 1 : -1, y > 0 ? 1 : -1, 0, \"\"].join(\",\");\n\n        property = \"rotate3d\";\n        startValue = axis + startDeg + \"deg\";\n        endValue = axis + endDeg + \"deg\";\n    } else {\n        if (x) {\n            property = \"rotateX\";\n        } else if (y) {\n            property = \"rotateY\";\n        } else {\n            return item;\n        }\n        startValue = startDeg + \"deg\";\n        endValue = endDeg + \"deg\";\n    }\n    item.set({\n        transform: {\n            [property]: [startValue, endValue],\n        },\n    });\n    return item;\n}\n/**\n * You can create an effect that flips vertically around the x-axis.\n * @memberof Effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipX } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 0, backside: false })\n// flipX({ x: 1, backside: false })\nflipX()\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target\")\n  .play();\nflipX({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target2\")\n  .play();\n */\nexport function flipX({\n    x = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ y: 0, x, backside });\n\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * You can create an effect that flips horizontally around the y-axis.\n * @memberof Effects\n * @param options\n * @param {number} [options.y=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipY } from \"@scenejs/effects\";\n\n// flip({ x: 0, y: 1, backside: false })\n// flipY({ y: 1, backside: false })\nflipY()\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target\")\n  .play();\nflipY({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target2\")\n  .play();\n */\nexport function flipY({\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ x: 0, y, backside });\n\n    item.setOptions(arguments[0]);\n    return item;\n}\n\n/**\n * Make a shake effect.\n * @memberof Effects\n * @param options\n * @param {object|string} [options.properties=\"transform: translateX(5px) translateY (5px) rotate(5deg)\"] - The range of properties to be moved.\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake } from \"@scenejs/effects\";\n\nshake()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n        translateY: [\"-5px\", \"5px\"],\n        rotate: \"5deg\",\n        // set range\n        scale: [0.8, 1],\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target2\")\n  .play();\n */\nexport function shake({\n    properties = {\n        transform: {\n            translateX: [`-10px`, `10px`],\n            translateY: [`-10px`, `10px`],\n            rotate: [`-10deg`, `10deg`],\n        },\n    },\n    frequency = 10,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = new SceneItem({}, arguments[0]);\n    const frame = new Frame(properties);\n    const names = frame.getNames();\n\n    names.forEach((propertyNames, i) => {\n        const value = frame.get(...propertyNames);\n        let start: number = 0;\n        let end: number = 0;\n        let unit: string = \"\";\n\n        if (isArray(value)) {\n            const { value: startNumber, unit: startUnit } = splitUnit(value[0]);\n\n            unit = startUnit;\n            start = startNumber;\n            end = splitUnit(value[1]).value;\n        } else {\n            const { value: valueNumber, unit: valueUnit } = splitUnit(value);\n\n            unit = valueUnit;\n            end = Math.abs(valueNumber);\n            start = -end;\n        }\n        item.set(`0%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n        item.set(`100%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n\n        for (let j = 1; j <= frequency; ++j) {\n            const ratio = Math.random() * (end - start) + start;\n            item.set(`${j / (frequency + 1) * 100}%`, ...propertyNames, `${ratio}${unit}`);\n        }\n    });\n    return item;\n}\n\n/**\n * Make a horizontal shake effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.x=[\"-5px\", \"5px\"]] - range of x's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeX } from \"@scenejs/effects\";\n\n// shakeX({ x: [\"-5px\", \"5px\"], frequency: 10 })\nshakeX()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target2\")\n  .play();\n */\nexport function shakeX({\n    x = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateX: x,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * Make a vertical shake effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.y=[\"-5px\", \"5px\"]] - range of y's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeY } from \"@scenejs/effects\";\n\n// shakeY({ y: [\"-5px\", \"5px\"], frequency: 10 })\nshakeY()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateY: [\"-5px\", \"5px\"]\n        translateY: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target2\")\n  .play();\n */\nexport function shakeY({\n    y = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateY: y,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n"],"names":["isArray","value","Array","splitUnit","text","matches","exec","prefix","unit","NaN","parseFloat","set","property","values","options","item","SceneItem","length","i","zoomIn","_a","_b","_c","from","_d","to","arguments","zoomOut","wipeIn","_e","wipeOut","transition","item1","item2","transitionObject","transitionItem","append","duration","getDuration","transitionTime","Math","max","setDirection","fadeIn","fadeOut","blink","flip","x","y","_f","backside","startValue","endValue","ratio","startDeg","endDeg","axis","join","transform","flipX","setOptions","flipY","shake","properties","frequency","frame","Frame","names","getNames","forEach","propertyNames","get","start","end","startNumber","startUnit","valueNumber","valueUnit","abs","j","random","shakeX","translateX","shakeY","translateY"],"mappings":"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"}