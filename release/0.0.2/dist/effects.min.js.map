{"version":3,"file":"effects.min.js","sources":["../src/effects.ts"],"sourcesContent":["import { SceneItem, AnimatorState, Frame } from \"scenejs\";\nimport { IObject, isArray, splitUnit, dot } from \"@daybrush/utils\";\nimport { EffectState } from \"./types\";\n\n/**\n * @namespace Effects\n */\n\n/**\n * Use the property to create an effect.\n * @memberof Effects\n * @private\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"@scenejs/effects\";\n// Scene.set(\"opacity\", [0, 1, 0], {duration: 2});\nset(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\n// Scene.blink({duration: 2});\nblink({ duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nfunction set(property: string | string[], values: any[], options: Partial<AnimatorState>): SceneItem {\n    const item = new SceneItem({}, options);\n    const length = values.length;\n\n    for (let i = 0; i < length; ++i) {\n        item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n    }\n    return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomIn } from \"@scenejs/effects\";\n\n// Scene.zoomIn({duration: 2});\nzoomIn({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomOut } from \"@scenejs/effects\";\n// Scene.zoomOut({ duration: 2 });\nzoomOut({ duration: 2 });\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeIn } from \"@scenejs/effects\";\n\n// Scene.wipeIn({ property: \"left\", duration: 2 });\nwipeIn({ property: \"left\", duration: 2 });\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeOut } from \"@scenejs/effects\";\n// Scene.wipeOut({property: \"left\", duration: 2});\nwipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Switch the scene from `item1` to `item2`.\n * @memberof Effects\n * @param - Item that end effect\n * @param - Item that start effect\n * @param -  `transitionItem` or `transitionObject` to switch from `item1` to `item2`\n * @example\nimport Scene from \"scenejs\";\nimport {transition, zoomIn, fadeOut} from \"@scenejs/effects\";\n\nvar transitionScene = new Scene({\n  \"[data-transition] .target\": {},\n  \"[data-transition] .target2\": {},\n}, {\n  delay: 0.1,\n  easing: \"ease-in-out\",\n  selector: true,\n});\nScene.transition(\n  transitionScene.getItem(\"[data-transition] .target\"),\n  transitionScene.getItem(\"[data-transition] .target2\"),\n  {\n    0:  [\n      fadeOut({ duration: 1 }),\n      zoomIn({ from: 1, to: 2, duration: 1 }),\n      \"opacity: 1; transform: rotate(0deg)\",\n    ],\n    1: \"opacity: 0; transform: rotate(40deg)\",\n  }\n);\ntransitionScene.play();\n */\nexport function transition(\n    item1: SceneItem,\n    item2: SceneItem,\n    transitionObject: SceneItem | IObject<any>,\n): void {\n    const transitionItem = new SceneItem();\n\n    transitionItem.append(transitionObject);\n\n    const duration = transitionItem.getDuration();\n    const transitionTime = Math.max(item1.getDuration() - duration, 0);\n    item1.set({\n        [transitionTime]: transitionItem,\n    });\n    transitionItem.setDirection(\"reverse\");\n    item2.set({\n        0: transitionItem,\n    });\n}\n\n/**\n * Make a fade in effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeIn } from \"@scenejs/effects\";\n// Scene.fadeIn({duration: 2});\nfadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeOut } from \"@scenejs/effects\";\n// Scene.fadeOut({duration: 2});\nfadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof Effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport {blink} from \"@scenejs/effects\";\n// Scene.blink({duration: 2});\nblink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to, from], arguments[0]);\n}\n/**\n * You can create a flip effect horizontally, vertically, or diagonally.\n * @memberof Effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount to be moved by the x-axis.\n * @param {number} [options.y=1] - Indicates the direction and amount to be moved by the y-axis.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 1, backside: false })\nflip()\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target\")\n  .play();\nflip({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target2\")\n  .play();\n */\nexport function flip({\n    x = 1,\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}) {\n    const item = new SceneItem({}, arguments[0]);\n    let property = \"\";\n    let startValue = \"\";\n    let endValue = \"\";\n    const ratio = (x && y) || x ? x : y;\n    const startDeg = (backside ? (ratio > 0 ? 180 : -180) : 0);\n    const endDeg = startDeg + ratio * 180;\n\n    if (x && y) {\n        const axis = [x > 0 ? 1 : -1, y > 0 ? 1 : -1, 0, \"\"].join(\",\");\n\n        property = \"rotate3d\";\n        startValue = axis + startDeg + \"deg\";\n        endValue = axis + endDeg + \"deg\";\n    } else {\n        if (x) {\n            property = \"rotateX\";\n        } else if (y) {\n            property = \"rotateY\";\n        } else {\n            return item;\n        }\n        startValue = startDeg + \"deg\";\n        endValue = endDeg + \"deg\";\n    }\n    item.set({\n        transform: {\n            [property]: [startValue, endValue],\n        },\n    });\n    return item;\n}\n/**\n * You can create an effect that flips vertically around the x-axis.\n * @memberof Effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipX } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 0, backside: false })\n// flipX({ x: 1, backside: false })\nflipX()\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target\")\n  .play();\nflipX({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target2\")\n  .play();\n */\nexport function flipX({\n    x = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ y: 0, x, backside });\n\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * You can create an effect that flips horizontally around the y-axis.\n * @memberof Effects\n * @param options\n * @param {number} [options.y=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipY } from \"@scenejs/effects\";\n\n// flip({ x: 0, y: 1, backside: false })\n// flipY({ y: 1, backside: false })\nflipY()\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target\")\n  .play();\nflipY({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target2\")\n  .play();\n */\nexport function flipY({\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ x: 0, y, backside });\n\n    item.setOptions(arguments[0]);\n    return item;\n}\n\n/**\n * Make a shake effect.\n * @memberof Effects\n * @param options\n * @param {object|string} [options.properties=\"transform: translateX(5px) translateY (5px) rotate(5deg)\"] - The range of properties to be moved.\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake } from \"@scenejs/effects\";\n\nshake()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n        translateY: [\"-5px\", \"5px\"],\n        rotate: \"5deg\",\n        // set range\n        scale: [0.8, 1],\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target2\")\n  .play();\n */\nexport function shake({\n    properties = {\n        transform: {\n            translateX: [`-10px`, `10px`],\n            translateY: [`-10px`, `10px`],\n            rotate: [`-10deg`, `10deg`],\n        },\n    },\n    frequency = 10,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = new SceneItem({}, arguments[0]);\n    const frame = new Frame(properties);\n    const names = frame.getNames();\n\n    names.forEach((propertyNames, i) => {\n        const value = frame.get(...propertyNames);\n        let start: number = 0;\n        let end: number = 0;\n        let unit: string = \"\";\n\n        if (isArray(value)) {\n            const { value: startNumber, unit: startUnit } = splitUnit(value[0]);\n\n            unit = startUnit;\n            start = startNumber;\n            end = splitUnit(value[1]).value;\n        } else {\n            const { value: valueNumber, unit: valueUnit } = splitUnit(value);\n\n            unit = valueUnit;\n            end = Math.abs(valueNumber);\n            start = -end;\n        }\n        item.set(`0%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n        item.set(`100%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n\n        for (let j = 1; j <= frequency; ++j) {\n            const ratio = Math.random() * (end - start) + start;\n            item.set(`${j / (frequency + 1) * 100}%`, ...propertyNames, `${ratio}${unit}`);\n        }\n    });\n    return item;\n}\n\n/**\n * Make a horizontal shake effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.x=[\"-5px\", \"5px\"]] - range of x's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeX } from \"@scenejs/effects\";\n\n// shakeX({ x: [\"-5px\", \"5px\"], frequency: 10 })\nshakeX()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target2\")\n  .play();\n */\nexport function shakeX({\n    x = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateX: x,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * Make a vertical shake effect.\n * @memberof Effects\n * @param options\n * @param {string|string[]} [options.y=[\"-5px\", \"5px\"]] - range of y's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeY } from \"@scenejs/effects\";\n\n// shakeY({ y: [\"-5px\", \"5px\"], frequency: 10 })\nshakeY()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateY: [\"-5px\", \"5px\"]\n        translateY: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target2\")\n  .play();\n */\nexport function shakeY({\n    y = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateY: y,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n"],"names":["set","property","values","options","item","SceneItem","length","i","flip","_a","_c","_d","x","_e","y","_f","backside","startValue","endValue","ratio","startDeg","endDeg","axis","join","transform","_b","shake","properties","frequency","frame","Frame","getNames","forEach","propertyNames","value","get","start","end","unit","isArray","startNumber","splitUnit","valueNumber","Math","abs","j","random","from","setOptions","translateX","translateY","item1","item2","transitionObject","transitionItem","append","duration","getDuration","transitionTime","max","setDirection","to"],"mappings":"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"}